stages:
  - build
  - deploy


variables:
  CI_PROJECT_REGISTRY: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME

  QA_COMPOSE_FILE: docker-compose.yml
  STAGING_COMPOSE_FILE: docker-compose.yml
  PRODUCTION_COMPOSE_FILE: docker-compose.yml

  POSTDEPLOY_SERVICE: django
  POSTDEPLOY_IMAGE: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/workspace:$CI_COMMIT_REF_SLUG

  POSTDEPLOY_COMMAND_QA: ../docker/commands/post_deploy_qa.sh
  POSTDEPLOY_COMMAND_STAGING: ../docker/commands/post_deploy_staging.sh
  POSTDEPLOY_COMMAND_PRODUCTION: ../docker/commands/post_deploy_production.sh


build_master:
  stage: build
  image: $CI_REGISTRY/unomena/worker-images/build:master
  variables:
    CI_COMMIT_SHORT_SHA: latest
  services:
    - name: docker:dind
      # Override entrypoint to allow for insecure(non https) local vagrant registry.
      # This is required purely to test build and registry behaviour on local vagrant
      # based environments. Since the IP is a local private IP which would only be
      # reachable from in a local vagrant environment this will not have any effect on
      # production environments.
      entrypoint: ["dockerd-entrypoint.sh"]
      command: ["--insecure-registry", "192.168.30.30:5005"]
  script:
    - curl https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/build.sh | sh
  only:
    - master
  except:
    - tags


build_branch:
  stage: build
  image: $CI_REGISTRY/unomena/worker-images/build:master
  services:
    - name: docker:dind
      # Override entrypoint to allow for insecure(non https) local vagrant registry.
      # This is required purely to test build and registry behaviour on local vagrant
      # based environments. Since the IP is a local private IP which would only be
      # reachable from in a local vagrant environment this will not have any effect on
      # production environments.
      entrypoint: ["dockerd-entrypoint.sh"]
      command: ["--insecure-registry", "192.168.30.30:5005"]
  script:
    - curl https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/build.sh | sh
  only:
    - web
  except:
    - master
    - qa
    - tags


deploy_branch:
  stage: deploy
  image: $CI_REGISTRY/unomena/worker-images/deploy:master
  variables:
    COMPOSE_FILE: $QA_COMPOSE_FILE
    POSTDEPLOY_COMMAND: $POSTDEPLOY_COMMAND_QA
    STAGE: qa
    RESOURCE_PREFIX: unomena-qa-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    STACK_HOSTNAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.qa.unomena.net
    CLUSTER_IP: $INTERNAL_CLUSTER_IP
    CLUSTER_ADMIN_USER_PASSWORD: $INTERNAL_CLUSTER_ADMIN_USER_PASSWORD
  environment:
    name: qa/$CI_COMMIT_REF_SLUG
    url: https://$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.qa.unomena.net
    on_stop: stop_branch
  script:
    - curl https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/deploy.sh | bash
  only:
    - web
  except:
    - master
    - qa
    - tags


stop_branch:
  stage: deploy
  image: $CI_REGISTRY/unomena/worker-images/deploy:master
  variables:
    STAGE: qa
    GIT_STRATEGY: none
    RESOURCE_PREFIX: unomena-qa-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    STACK_HOSTNAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.qa.unomena.net
    CLUSTER_IP: $INTERNAL_CLUSTER_IP
    CLUSTER_ADMIN_USER_PASSWORD: $INTERNAL_CLUSTER_ADMIN_USER_PASSWORD
  script:
    - curl https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/destroy.sh | bash
  environment:
    name: qa/$CI_COMMIT_REF_SLUG
    action: stop
  when: manual
  only:
    - web
  except:
    - master
    - qa
    - tags


build_qa:
  stage: build
  image: $CI_REGISTRY/unomena/worker-images/build:master
  services:
    - name: docker:dind
      # Override entrypoint to allow for insecure(non https) local vagrant registry.
      # This is required purely to test build and registry behaviour on local vagrant
      # based environments. Since the IP is a local private IP which would only be
      # reachable from in a local vagrant environment this will not have any effect on
      # production environments.
      entrypoint: ["dockerd-entrypoint.sh"]
      command: ["--insecure-registry", "192.168.30.30:5005"]
  script:
    - curl https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/build.sh | sh
  only:
    refs:
      - web
    variables:
      - $CI_COMMIT_REF_SLUG == "qa"
  except:
    - tags


deploy_qa:
  stage: deploy
  image: $CI_REGISTRY/unomena/worker-images/deploy:master
  variables:
    COMPOSE_FILE: $QA_COMPOSE_FILE
    POSTDEPLOY_COMMAND: $POSTDEPLOY_COMMAND_QA
    STAGE: qa
    RESOURCE_PREFIX: unomena-qa-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    STACK_HOSTNAME: $CI_PROJECT_NAME.qa.unomena.net
    CLUSTER_IP: $INTERNAL_CLUSTER_IP
    CLUSTER_ADMIN_USER_PASSWORD: $INTERNAL_CLUSTER_ADMIN_USER_PASSWORD
  environment:
    name: qa/$CI_COMMIT_REF_SLUG
    url: https://$CI_PROJECT_NAME.qa.unomena.net
    on_stop: stop_qa
  script:
    - curl https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/deploy.sh | bash
  only:
    refs:
      - web
    variables:
      - $CI_COMMIT_REF_SLUG == "qa"
  except:
    - tags


stop_qa:
  stage: deploy
  image: $CI_REGISTRY/unomena/worker-images/deploy:master
  variables:
    STAGE: qa
    GIT_STRATEGY: none
    RESOURCE_PREFIX: unomena-qa-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    STACK_HOSTNAME: $CI_PROJECT_NAME.qa.unomena.net
    CLUSTER_IP: $INTERNAL_CLUSTER_IP
    CLUSTER_ADMIN_USER_PASSWORD: $INTERNAL_CLUSTER_ADMIN_USER_PASSWORD
  script:
    - curl https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/destroy.sh | bash
  environment:
    name: qa/$CI_COMMIT_REF_SLUG
    action: stop
  when: manual
  only:
    refs:
      - web
    variables:
      - $CI_COMMIT_REF_SLUG == "qa"
  except:
    - tags


build:
  stage: build
  image: $CI_REGISTRY/unomena/worker-images/build:master
  services:
    - name: docker:dind
      # Override entrypoint to allow for insecure(non https) local vagrant registry.
      # This is required purely to test build and registry behaviour on local vagrant
      # based environments. Since the IP is a local private IP which would only be
      # reachable from in a local vagrant environment this will not have any effect on
      # production environments.
      entrypoint: ["dockerd-entrypoint.sh"]
      command: ["--insecure-registry", "192.168.30.30:5005"]
  script:
    - curl https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/build.sh | sh
  only:
    - tags
  except:
    - branches


staging:
  stage: deploy
  image: $CI_REGISTRY/unomena/worker-images/deploy:master
  variables:
    COMPOSE_FILE: $STAGING_COMPOSE_FILE
    POSTDEPLOY_COMMAND: $POSTDEPLOY_COMMAND_STAGING
    STAGE: staging
    RESOURCE_PREFIX: unomena-staging-$CI_PROJECT_NAME
    STACK_HOSTNAME: $CI_PROJECT_NAME.staging.unomena.net
    CLUSTER_IP: $INTERNAL_CLUSTER_IP
    CLUSTER_ADMIN_USER_PASSWORD: $INTERNAL_CLUSTER_ADMIN_USER_PASSWORD
  environment:
    name: staging
    url: https://$CI_PROJECT_NAME.staging.unomena.net
    on_stop: stop_staging
  script:
    - curl https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/deploy.sh | bash
  only:
    - tags
  except:
    - branches


stop_staging:
  stage: deploy
  image: $CI_REGISTRY/unomena/worker-images/deploy:master
  variables:
    STAGE: staging
    GIT_STRATEGY: none
    RESOURCE_PREFIX: unomena-staging-$CI_PROJECT_NAME
    STACK_HOSTNAME: $CI_PROJECT_NAME.staging.unomena.net
    CLUSTER_IP: $INTERNAL_CLUSTER_IP
    CLUSTER_ADMIN_USER_PASSWORD: $INTERNAL_CLUSTER_ADMIN_USER_PASSWORD
  script:
    - curl https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/destroy.sh | bash
  environment:
    name: staging
    action: stop
  when: manual
  only:
    - tags
  except:
    - branches


production:
  stage: deploy
  image: $CI_REGISTRY/unomena/worker-images/deploy:master
  variables:
    COMPOSE_FILE: $PRODUCTION_COMPOSE_FILE
    POSTDEPLOY_COMMAND: $POSTDEPLOY_COMMAND_PRODUCTION
    STAGE: production
    RESOURCE_PREFIX: unomena-production-$CI_PROJECT_NAME
    STACK_HOSTNAME: $PRODUCTION_STACK_HOSTNAME
    CLUSTER_IP: $PRODUCTION_CLUSTER_IP
    CLUSTER_ADMIN_USER_PASSWORD: $PRODUCTION_CLUSTER_ADMIN_USER_PASSWORD
  environment:
    name: production
    url: https://$PRODUCTION_STACK_HOSTNAME
  script:
    - curl https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/deploy.sh | bash
  only:
    - tags
  except:
    - branches
  when: manual