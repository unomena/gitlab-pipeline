#variables:
#  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#  STACK_NAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG

#  STAGING_RESOURCE_PREFIX: io-sephton-staging-$CI_PROJECT_NAME
#  STAGING_STACK_HOSTNAME: $CI_PROJECT_NAME.staging.sephton.io
#  PRODUCTION_RESOURCE_PREFIX: io-sephton-production-$CI_PROJECT_NAME
#  PRODUCTION_STACK_HOSTNAME: $CI_PROJECT_NAME.production.sephton.io
stages:
  - build
  - deploy


build_qa:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - apk add --no-cache py-pip
    - pip install docker-compose
    - rm .env docker-compose.override.yml
    - docker login --username gitlab-ci-token --password $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose --file docker-compose-build.yml pull
    - docker-compose --file docker-compose-build.yml build --pull
    - docker-compose --file docker-compose-build.yml push
  only:
    - web
  except:
    - master
    - develop


deploy_qa:
  stage: deploy
  image: python:3.7-slim
  variables:
    RESOURCE_PREFIX: io-sephton-qa-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    STACK_HOSTNAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.qa.cluster.unomena.net
    CLUSTER_IP: $QA_CLUSTER_IP
    CLUSTER_ADMIN_USER_PASSWORD: $QA_CLUSTER_ADMIN_USER_PASSWORD
    CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY_FILE: /tmp/keys/QA_CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY
  environment:
    name: qa/$CI_COMMIT_REF_SLUG
    url: https://$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.qa.cluster.unomena.net
    on_stop: stop_qa
  script:
    - apt-get -yy update && apt-get install -y openssh-client wget
    - pip install ansible
    - mkdir keys
    - cp $CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY_FILE keys/id_rsa
    - chmod 700 keys/id_rsa
    - wget https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/deploy.yml
    - wget https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/inventory.py
    - chmod +x inventory.py
    - ansible-playbook -i $CLUSTER_IP, --extra-vars "ansible_sudo_pass=$CLUSTER_ADMIN_USER_PASSWORD ci_job_token=$CI_JOB_TOKEN ci_registry=$CI_REGISTRY resource_prefix=$RESOURCE_PREFIX stack_hostname=$STACK_HOSTNAME" deploy.yml
  only:
    - web
  except:
    - master
    - develop


stop_qa:
  stage: deploy
  image: python:3.7-slim
  variables:
    GIT_STRATEGY: none
    RESOURCE_PREFIX: io-sephton-qa-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    STACK_HOSTNAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.qa.cluster.unomena.net
    CLUSTER_IP: $QA_CLUSTER_IP
    CLUSTER_ADMIN_USER_PASSWORD: $QA_CLUSTER_ADMIN_USER_PASSWORD
    CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY_FILE: /tmp/keys/QA_CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY
  script:
    - apt-get -yy update && apt-get install -y openssh-client wget
    - pip install ansible
    - mkdir keys
    - cp $CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY_FILE keys/id_rsa
    - chmod 700 keys/id_rsa
    - wget https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/destroy.yml
    - wget https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/inventory.py
    - chmod +x inventory.py
    - ansible-playbook -i $CLUSTER_IP, --extra-vars "ansible_sudo_pass=$CLUSTER_ADMIN_USER_PASSWORD ci_job_token=$CI_JOB_TOKEN ci_registry=$CI_REGISTRY resource_prefix=$RESOURCE_PREFIX stack_hostname=$STACK_HOSTNAME" destroy.yml
  environment:
    name: qa/$CI_COMMIT_REF_SLUG
    action: stop
  when: manual
  only:
    - web


build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - apk add --no-cache py-pip
    - pip install docker-compose
    - rm .env docker-compose.override.yml
    - docker login --username gitlab-ci-token --password $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose --file docker-compose-build.yml pull
    - docker-compose --file docker-compose-build.yml build --pull
    - docker-compose --file docker-compose-build.yml push
  only:
    - tags
  except:
    - branches


staging:
  stage: deploy
  image: python:3.7-slim
  variables:
    RESOURCE_PREFIX: io-sephton-staging-$CI_PROJECT_NAME
    STACK_HOSTNAME: $CI_PROJECT_NAME.staging.cluster.unomena.net
    CLUSTER_IP: $STAGING_CLUSTER_IP
    CLUSTER_ADMIN_USER_PASSWORD: $STAGING_CLUSTER_ADMIN_USER_PASSWORD
    CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY_FILE: /tmp/keys/STAGING_CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY
  environment:
    name: staging
    url: https://$CI_PROJECT_NAME.staging.cluster.unomena.net
  script:
    - apt-get -yy update && apt-get install -y openssh-client wget
    - pip install ansible
    - mkdir keys
    - cp $CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY_FILE keys/id_rsa
    - chmod 700 keys/id_rsa
    - wget https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/deploy.yml
    - wget https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/inventory.py
    - chmod +x inventory.py
    - ansible-playbook -i $CLUSTER_IP, --extra-vars "ansible_sudo_pass=$CLUSTER_ADMIN_USER_PASSWORD ci_job_token=$CI_JOB_TOKEN ci_registry=$CI_REGISTRY resource_prefix=$RESOURCE_PREFIX stack_hostname=$STACK_HOSTNAME" deploy.yml
  only:
    - tags
  except:
    - branches


production:
  stage: deploy
  image: python:3.7-slim
  variables:
    RESOURCE_PREFIX: io-sephton-production-$CI_PROJECT_NAME
    STACK_HOSTNAME: $PRODUCTION_STACK_HOSTNAME
    CLUSTER_IP: $PRODUCTION_CLUSTER_IP
    CLUSTER_ADMIN_USER_PASSWORD: $PRODUCTION_CLUSTER_ADMIN_USER_PASSWORD
    CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY_FILE: /tmp/keys/PRODUCTION_CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY
  environment:
    name: production
    url: https://$PRODUCTION_STACK_HOSTNAME
  script:
    - apt-get -yy update && apt-get install -y openssh-client wget
    - pip install ansible
    - mkdir keys
    - cp $CLUSTER_ADMIN_USER_SSH_PRIVATE_KEY_FILE keys/id_rsa
    - chmod 700 keys/id_rsa
    - wget https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/deploy.yml
    - wget https://gitlab.unomena.net/unomenapublic/gitlab-pipeline/raw/master/inventory.py
    - chmod +x inventory.py
    - ansible-playbook -i $CLUSTER_IP, --extra-vars "ansible_sudo_pass=$CLUSTER_ADMIN_USER_PASSWORD ci_job_token=$CI_JOB_TOKEN ci_registry=$CI_REGISTRY resource_prefix=$RESOURCE_PREFIX stack_hostname=$STACK_HOSTNAME" deploy.yml
  only:
    - tags
  except:
    - branches
  when: manual